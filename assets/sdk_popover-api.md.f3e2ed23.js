import{_ as e,c as t,o as a,a as s}from"./app.8c20473c.js";const F=JSON.parse('{"title":"Popover","description":"","frontmatter":{},"headers":[{"level":2,"title":"getAll()","slug":"getall","link":"#getall","children":[{"level":3,"title":"type","slug":"type","link":"#type","children":[]}]},{"level":2,"title":"makeActive()","slug":"makeactive","link":"#makeactive","children":[{"level":3,"title":"type","slug":"type-1","link":"#type-1","children":[]},{"level":3,"title":"Popover","slug":"popover-1","link":"#popover-1","children":[]}]}],"relativePath":"sdk/popover-api.md"}'),o={name:"sdk/popover-api.md"},l=s(`<h1 id="popover" tabindex="-1">Popover <a class="header-anchor" href="#popover" aria-hidden="true">#</a></h1><h2 id="getall" tabindex="-1">getAll() <a class="header-anchor" href="#getall" aria-hidden="true">#</a></h2><p>Returns full set of all <a href="#Popover">Popover</a>[]</p><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-hidden="true">#</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getAll</span><span style="color:#89DDFF;">():</span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Popover</span><span style="color:#A6ACCD;">[]</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="makeactive" tabindex="-1">makeActive() <a class="header-anchor" href="#makeactive" aria-hidden="true">#</a></h2><h3 id="type-1" tabindex="-1">type <a class="header-anchor" href="#type-1" aria-hidden="true">#</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">makeActive</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="popover-1" tabindex="-1">Popover <a class="header-anchor" href="#popover-1" aria-hidden="true">#</a></h3><table><thead><tr><th>property</th><th>access</th><th>type</th></tr></thead><tbody><tr><td>id</td><td>read only</td><td><code>number</code></td></tr><tr><td>title</td><td>read only</td><td><code>string</code> or <code>undefined</code></td></tr><tr><td>formFields</td><td>read only</td><td><code>formField</code></td></tr><tr><td>rows</td><td>read only</td><td><code>row</code></td></tr></tbody></table>`,10),n=[l];function p(r,d,c,i,h,y){return a(),t("div",null,n)}const u=e(o,[["render",p]]);export{F as __pageData,u as default};
